#!/bin/sh

# Definición de variables
GREEN="\033[0;32m"
RED="\033[0;31m"
BOLD="\033[1m"
NC="\033[0m"

# Inicio del script
[ ! -f "$1" ] && printf "${RED}${BOLD}Debes colocar el archivo 'tracks'${NC}\n" && exit

TRACK=0
TOTAL="$(wc -l < $1)"

# Proceso de conversión de canciones
while true; do
  echo
  printf "%s\n" "¿Cuál es el formato del álbum?" "1) opus" "2) mp3" "3) wav"
  echo
  read RES
  case $RES in
    1)
      SONGS=$(ls *.opus --time=creation -r | sed "s/ /°/g")
      EXT="opus"
      break
      ;;
    2)
      SONGS=$(ls *.mp3 --time=creation -r | sed "s/ /°/g")
      EXT="mp3"
      break
      ;;
    3)
      SONGS=$(ls *.wav --time=creation -r | sed "s/ /°/g")
      EXT="wav"
      break
      ;;

    *)
      printf "${RED}${BOLD}Opción inválida${NC}\n"
      ;;
  esac
done

# Ordeno las canciones por orden de descarga y reemplazo los espacios por 
# signos de grado para que, al ejecutar el loop, los nombres de cada cancion
# sean tratados como una sola linea

for SONG in $SONGS; do
  TRACK="$(printf "%02d" "$(expr $TRACK + 1)")"
  SONGNAME="$(printf "$SONG" | sed "s/°/ /g;s/ \[.*\.//g;s/$EXT$/°$TRACK/g" | awk -F ° '{print $2,$1}' | sed "s/\s/ - /")"
  printf "Renombrando '$(printf $SONG | sed "s/°/ /g;s/ \[.*//g")'\n"
  # Revierto los signos de grado a espacios para que se reconozca el 
  # nombre original del archivo y pueda convertirlo de formato
  mv "$(printf $SONG | sed 's/°/ /g')" "$SONGNAME.$EXT"
done

# Proceso de etiquetado de canciones

# Metadatos generales
echo
printf "Nombre del album: "; read -r ALBUM
printf "Nombre del artista: "; read -r ARTIST
printf "Año de publicación: "; read -r DATE
while true; do
  printf "¿Cuántos generos posee el álbum? [1/2/3]\n"; read ANSWER
  case $ANSWER in
    1)
      printf "Género del álbum: "; read -r GENRE
      break
      ;;
    2)
      printf "Primer género del álbum: "; read -r GENRE
      printf "Segundo género del álbum: "; read -r GENRE2
      break
      ;;
    3)
      printf "Primer género del álbum: "; read -r GENRE
      printf "Segundo género del álbum: "; read -r GENRE2
      printf "Tercer género del álbum: "; read -r GENRE3
      break
      ;;
    *)
      echo
      printf "${RED}${BOLD}Esa opción no es válida${NC}\n"
      ;;
  esac
done
while true; do
  printf "¿El album posee discos múltiples? [y/n]\n"; read ANSWER
  case $ANSWER in
    y)
      printf "Número de disco: "; read -r DISCNUMBER
      break
      ;;
    n)
      break
      ;;
    *)
      echo
      printf "${RED}${BOLD}Esa opción no es válida${NC}\n"
      ;;
  esac
done
echo
TRACK=0
 
# Aplicar metadatos
if [ -n "$GENRE3" ]; then
  for SONG in *.$EXT; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed "s/\.$EXT$//g")"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre[0] \"$GENRE\"" -c "set genre[1] \"$GENRE2\"" -c "set genre[2] \"$GENRE3\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set discnumber '$DISCNUMBER'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    else
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre[0] \"$GENRE\"" -c "set genre[1] \"$GENRE2\"" -c "set genre[2] \"$GENRE3\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    fi
  done
elif [ -n "$GENRE2" ]; then
  for SONG in *.$EXT; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed "s/\.$EXT$//g")"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre[0] \"$GENRE\"" -c "set genre[1] \"$GENRE2\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set discnumber '$DISCNUMBER'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    else
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre[0] \"$GENRE\"" -c "set genre[1] \"$GENRE2\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    fi
  done
else
  for SONG in *.$EXT; do
    NAME="$(printf "$SONG" | awk '{print substr($0, index($0, $3))}' | sed "s/\.$EXT$//g")"
    TRACK="$(printf "$(expr $TRACK + 1)")"
    printf "Escribiendo metadatos de '$SONG'\n"

    # Si el álbum tiene más de un disco
    if [ -n "$DISCNUMBER" ]; then
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre \"$GENRE\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set discnumber '$DISCNUMBER'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    else
      kid3-cli -c "set title \"$NAME\"" -c "set album \"$ALBUM\"" -c "set artist \"$ARTIST\"" -c "set date '$DATE'" -c "set genre \"$GENRE\"" -c "set tracknumber '$TRACK'" -c "set totaltracks '$TOTAL'" -c "set picture:./cover.jpg 'Front cover'" "$SONG"
    fi
  done
fi

# Diálogo para remover archivos sobrantes
while true; do
  echo
  printf "¿Desea remover los archivos sobrantes? [y/n]\n" && read ANSWER
  case "$ANSWER" in
    y)
      rm tracks cover.jpg
      echo
      printf "${GREEN}${BOLD}¡Etiquetado finalizado!${NC}\n"
      break
      ;;
    n)
      echo
      printf "${GREEN}${BOLD}¡Etiquetado finalizado!${NC}\n"
      break
      ;;
    *)
      echo
      printf "${RED}${BOLD}Esa opción no es válida${NC}\n"
      ;;
  esac
done
